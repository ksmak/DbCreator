{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.db_struct.tsx", "../../../app/components/UI/widgets/db_struct/buttons/btn_add_dictionary.tsx", "../../../app/components/UI/widgets/db_struct/buttons/btn_add_inputform.tsx", "../../../app/components/UI/widgets/db_struct/buttons/btn_add_searchform.tsx", "../../../app/components/UI/widgets/db_struct/buttons/btn_restruct_db.tsx", "../../../app/components/UI/widgets/db_struct/buttons/buttons.tsx", "../../../app/components/UI/widgets/db_struct/navigator.tsx", "../../../app/components/UI/widgets/db_struct/forms/form_dict.tsx", "../../../app/components/UI/widgets/db_struct/forms/form_group.tsx", "../../../app/components/UI/widgets/db_struct/forms/form_input.tsx", "../../../app/components/UI/widgets/db_struct/forms/form_search.tsx", "../../../app/components/UI/widgets/db_struct/forms/forms.tsx", "../../../app/components/UI/widgets/db_struct/view.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard.db_struct.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard.db_struct.tsx\");\n  import.meta.hot.lastModified = \"1710241502349.797\";\n}\n// REMIX HMR END\n\nimport { Prisma } from \"@prisma/client\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData, useLoaderData, useOutletContext } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport api from \"~/components/api\";\nimport DbStructView from \"~/components/UI/widgets/db_struct/view\";\nexport async function loader({\n  request\n}) {\n  const url = new URL(request.url);\n  const state = url.searchParams.get(\"state\");\n  const inputFormId = url.searchParams.get(\"inputFormId\");\n  const searchFormId = url.searchParams.get(\"searchFormId\");\n  const dictionaryId = url.searchParams.get(\"dictionaryId\");\n  const groupId = url.searchParams.get(\"groupId\");\n  const inputFieldId = url.searchParams.get(\"inputFieldId\");\n  const groups = await api.db.getGroups(Number(inputFormId));\n  const inputFields = await api.db.getInputFields();\n  let inputForm, searchForm, dictionary, group, inputField;\n  switch (state) {\n    case 'dictionary':\n      {\n        invariant(dictionaryId, \"Missing dictionaryId param\");\n        dictionary = await api.db.getDictionary(Number(dictionaryId));\n        break;\n      }\n    case 'inputForm':\n      {\n        invariant(inputFormId, \"Missing inputFormId param\");\n        inputForm = await api.db.getInputForm(Number(inputFormId));\n        break;\n      }\n    case 'searchForm':\n      {\n        invariant(searchFormId, \"Missing searchFormId param\");\n        searchForm = await api.db.getSearchForm(Number(searchFormId));\n        break;\n      }\n    case 'group':\n      {\n        invariant(groupId, \"Missing groupId param\");\n        group = await api.db.getGroup(Number(groupId));\n        inputField = group?.fields.find(item => {\n          item.id === Number(inputFieldId);\n        });\n        break;\n      }\n  }\n  return json({\n    state,\n    dictionary,\n    inputForm,\n    searchForm,\n    group,\n    inputField,\n    groups,\n    inputFields\n  });\n}\nexport async function action({\n  request\n}) {\n  let errors = null;\n  const formData = await request.formData();\n  const {\n    _action,\n    ...values\n  } = Object.fromEntries(formData);\n  if (_action === 'updateInputForm') {\n    try {\n      await api.db.updateInputForm(Number(values.id), {\n        id: Number(values.id),\n        pos: Number(values.pos),\n        title_kk: String(values.title_kk),\n        title_ru: String(values.title_ru)\n      });\n      return redirect(`/dashboard/db_struct?state=inputForm&inputFormId=${values.id}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptyInputForm') {\n    try {\n      const form = await api.db.createEmptyInputForm(Number(values.cnt));\n      return redirect(`/dashboard/db_struct?state=inputForm&inputFormId=${form.id}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteInputForm') {\n    try {\n      await api.db.deleteInputForm(Number(values.id));\n      return redirect(`/dashboard/db_struct`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateSearchForm') {\n    try {\n      await api.db.updateSearchForm(Number(values.id), {\n        id: Number(values.id),\n        pos: Number(values.pos),\n        title_kk: String(values.title_kk),\n        title_ru: String(values.title_ru)\n      });\n      return redirect(`/dashboard/db_struct?state=searchForm&searchFormId=${values.id}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptySearchForm') {\n    try {\n      const form = await api.db.createEmptySearchForm(Number(values.cnt));\n      return redirect(`/dashboard/db_struct?state=searchForm&searchFormId=${form.id}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteSearchForm') {\n    try {\n      await api.db.deleteSearchForm(Number(values.id));\n      return redirect(`/dashboard/db_struct`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateDictionary') {\n    try {\n      await api.db.updateDictionary(Number(values.id), {\n        id: Number(values.id),\n        title_kk: String(values.title_kk),\n        title_ru: String(values.title_ru)\n      });\n      return redirect(`/dashboard/db_struct?state=dictionary&dictionaryId=${values.id}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptyDictionary') {\n    try {\n      const dict = await api.db.createEmptyDictionary(Number(values.cnt));\n      return redirect(`/dashboard/db_struct?state=dictionary&dictionaryId=${dict.id}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteDictionary') {\n    try {\n      await api.db.deleteDictionary(Number(values.id));\n      return redirect(`/dashboard/db_struct`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptyGroup') {\n    try {\n      const group = await api.db.createEmptyGroup(Number(values.inputFormId), Number(values.cnt));\n      return redirect(`/dashboard/db_struct?state=group&groupId=${group.id}&inputFormId=${group.inputFormId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateGroup') {\n    try {\n      const group = await api.db.updateGroup(Number(values.id), {\n        id: Number(values.id),\n        inputFormId: Number(values.inputFormId),\n        pos: Number(values.pos),\n        title_kk: String(values.title_kk),\n        title_ru: String(values.title_ru),\n        isMulty: Boolean(values.isMulty)\n      });\n      return redirect(`/dashboard/db_struct?state=group&inputFormId=${group.inputFormId}&groupId=${group.id}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteGroup') {\n    try {\n      await api.db.deleteGroup(Number(values.id));\n      return redirect('/dashboard/db_struct');\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateInputField') {\n    try {\n      await api.db.updateInputField(Number(values.id), {\n        id: Number(values.id),\n        groupId: Number(values.groupId),\n        colSpan: Number(values.colSpan),\n        colStart: Number(values.colStart),\n        pos: Number(values.pos),\n        title_kk: String(values.title_kk),\n        title_ru: String(values.title_ru),\n        len: Number(values.len),\n        fieldType: String(values.fieldType),\n        dicId: Number(values.dicId),\n        isKey: Boolean(values.isKey),\n        isVisible: Boolean(values.isVisible),\n        isEnable: Boolean(values.isEnable),\n        isRequire: Boolean(values.isRequire),\n        precision: Number(values.precision),\n        isDuplicate: Boolean(values.isDuplicate)\n      });\n      return redirect(`/dashboard/db_struct?state=group&inputFormId=${values.inputFormId}&groupId=${values.groupId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptyInputField') {\n    try {\n      await api.db.createEmptyInputField(Number(values.groupId), Number(values.cnt));\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteInputField') {\n    try {\n      await api.db.deleteInputField(Number(values.id));\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptySearchField') {\n    try {\n      await api.db.createEmptySearchField(Number(values.searchFormId), Number(values.cnt));\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateSearchField') {\n    try {\n      await api.db.updateSearchField(Number(values.id), {\n        id: Number(values.id),\n        pos: Number(values.pos),\n        searchFormId: Number(values.searchFormId),\n        title_kk: String(values.title_kk),\n        title_ru: String(values.title_ru),\n        fieldId: Number(values.fieldId)\n      });\n      return redirect(`/dashboard/db_struct?state=searchForm&searchFormId=${values.searchFormId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteSearchField') {\n    try {\n      await api.db.deleteSearchField(Number(values.id));\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'generateStructDb') {\n    try {\n      await api.db.generateStructDb();\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  return json({\n    errors\n  });\n}\nexport default function DbStruct() {\n  _s();\n  const {\n    dictionaries,\n    inputForms,\n    searchForms\n  } = useOutletContext();\n  const {\n    state,\n    dictionary,\n    inputForm,\n    searchForm,\n    group,\n    groups,\n    inputFields\n  } = useLoaderData();\n  const data = useActionData();\n  return <DbStructView errors={data?.errors ? data?.errors : undefined} state={state} inputForms={inputForms} searchForms={searchForms} dictionaries={dictionaries} groups={groups} inputFormId={inputForm?.id} searchFormId={searchForm?.id} dictionaryId={dictionary?.id} groupId={group?.id} inputForm={inputForm} searchForm={searchForm} dictionary={dictionary} group={group} inputFields={inputFields} />;\n}\n_s(DbStruct, \"kNnKkDlN1zrymI1rlQ+0TMjZkQA=\", false, function () {\n  return [useOutletContext, useLoaderData, useActionData];\n});\n_c = DbStruct;\nvar _c;\n$RefreshReg$(_c, \"DbStruct\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/buttons/btn_add_dictionary.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/buttons/btn_add_dictionary.tsx\");\n  import.meta.hot.lastModified = \"1710240778667.36\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonAddDicionary({\n  count\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"cnt\" defaultValue={count + 1} />\n            <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" type=\"submit\" name=\"_action\" value=\"createEmptyDictionary\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n                {t('add_dictionary')}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonAddDicionary, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonAddDicionary;\nvar _c;\n$RefreshReg$(_c, \"ButtonAddDicionary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/buttons/btn_add_inputform.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/buttons/btn_add_inputform.tsx\");\n  import.meta.hot.lastModified = \"1710240783271.457\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonAddInputForm({\n  count\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"cnt\" defaultValue={count + 1} />\n            <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" type=\"submit\" name=\"_action\" value=\"createEmptyInputForm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n                {t('add_inputform')}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonAddInputForm, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonAddInputForm;\nvar _c;\n$RefreshReg$(_c, \"ButtonAddInputForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/buttons/btn_add_searchform.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/buttons/btn_add_searchform.tsx\");\n  import.meta.hot.lastModified = \"1710240785991.514\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonAddSearchForm({\n  count\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"cnt\" defaultValue={count + 1} />\n            <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" type=\"submit\" name=\"_action\" value=\"createEmptySearchForm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n                {t('add_searchform')}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonAddSearchForm, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonAddSearchForm;\nvar _c;\n$RefreshReg$(_c, \"ButtonAddSearchForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/buttons/btn_restruct_db.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/buttons/btn_restruct_db.tsx\");\n  import.meta.hot.lastModified = \"1710244625059.993\";\n}\n// REMIX HMR END\n\nimport MaterialTailwind from \"@material-tailwind/react\";\nconst {\n  Spinner\n} = MaterialTailwind;\nimport { Form, useFetcher } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nexport default function ButtonRestructDb() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const fetcher = useFetcher();\n  const isRestruct = fetcher.state !== \"idle\";\n  const handleRestruct = async event => {\n    const response = confirm(\"Please confirm you want to restructure database.\");\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <Form method=\"post\">\n            <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" type=\"submit\" name=\"_action\" value=\"generateStructDb\" disabled={isRestruct} onClick={handleRestruct}>\n                {isRestruct ? <>\n                        <Spinner className=\"w-4 h-4\" />\n                        {t('restruct_db')} ...\n                    </> : <>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\" />\n                        </svg>\n                        {t('restruct_db')}\n                    </>}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonRestructDb, \"atgucM4HKzCQ6fSpN6+mQRoewP4=\", false, function () {\n  return [useTranslation, useFetcher];\n});\n_c = ButtonRestructDb;\nvar _c;\n$RefreshReg$(_c, \"ButtonRestructDb\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/buttons/buttons.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/buttons/buttons.tsx\");\n  import.meta.hot.lastModified = \"1710240684321.405\";\n}\n// REMIX HMR END\n\nimport ButtonAddDicionary from \"./btn_add_dictionary\";\nimport ButtonAddInputForm from \"./btn_add_inputform\";\nimport ButtonAddSearchForm from \"./btn_add_searchform\";\nimport ButtonRestructDb from \"./btn_restruct_db\";\nexport default function Buttons({\n  state,\n  dictionaries_count,\n  inputForms_count,\n  searchForms_count\n}) {\n  return <div className=\"mb-2 flex justify-between py-2 px-2 border\">\n            <div className=\"flex items-center gap-3\">\n                {state === 'dictionary' ? <ButtonAddDicionary count={dictionaries_count} /> : state === 'inputForm' ? <ButtonAddInputForm count={inputForms_count} /> : state === 'searchForm' ? <ButtonAddSearchForm count={searchForms_count} /> : null}\n            </div>\n            <ButtonRestructDb />\n        </div>;\n}\n_c = Buttons;\nvar _c;\n$RefreshReg$(_c, \"Buttons\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/navigator.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/navigator.tsx\");\n  import.meta.hot.lastModified = \"1710416319374.504\";\n}\n// REMIX HMR END\n\nimport { Link } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nexport default function DbStructNav({\n  state,\n  inputForms,\n  searchForms,\n  dictionaries,\n  inputFormId,\n  searchFormId,\n  dictionaryId,\n  groupId\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  return <div className=\"p-4 mr-5 w-1/4 border\">\n            <ul>\n                <li className={[\"flex items-center gap-1 font-bold\", state === 'inputForm' && !inputFormId ? \"bg-selected\" : \"\"].join(' ')}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0 1 11.186 0Z\" />\n                    </svg>\n                    <Link to={`/dashboard/db_struct?state=inputForm&inputFormId=0`}>\n                        {t('inputforms')}\n                    </Link>\n                </li>\n                <ul>\n                    {inputForms.map(form => {\n          let formTitle = `${form.pos}. ${form[`title_${i18n.language}`]}`;\n          return <div key={form.id}>\n                                <Link to={`/dashboard/db_struct?state=inputForm&inputFormId=${form.id}`}>\n                                    <li className={[\"pl-4 flex items-center gap-1 hover:cursor-pointer\", state === 'inputForm' && form.id === inputFormId ? \"bg-selected\" : \"\"].join(' ')}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 0 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25\" />\n                                        </svg>\n                                        {formTitle}\n                                    </li>\n                                </Link>\n                                <ul>\n                                    {form.groups.map(gr => {\n                let groupTitle = `${gr.pos}. ${gr[`title_${i18n.language}`]}`;\n                return <Link key={gr.id} to={`/dashboard/db_struct?state=group&inputFormId=${gr.inputFormId}&groupId=${gr.id}`}>\n                                                <li className={[\"pl-8 flex items-center gap-1 hover:cursor-pointer\", state === 'group' && gr.id === groupId ? \"bg-selected\" : \"\"].join(' ')}>\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 0 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25\" />\n                                                    </svg>\n                                                    {groupTitle}\n                                                </li>\n                                            </Link>;\n              })}\n                                </ul>\n                            </div>;\n        })}\n                </ul>\n                <li className={[\"flex items-center gap-1 font-bold\", state === 'searchForm' && !searchFormId ? \"bg-selected\" : \"\"].join(' ')}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0 1 11.186 0Z\" />\n                    </svg>\n                    <Link to={`/dashboard/db_struct?state=searchForm&searchFormId=0`}>\n                        {t('searchforms')}\n                    </Link>\n                </li>\n                <ul>\n                    {searchForms.map(form => {\n          let formTitle = `${form.pos}. ${form[`title_${i18n.language}`]}`;\n          return <Link key={form.id} to={`/dashboard/db_struct?state=searchForm&searchFormId=${form.id}`}>\n                                <li className={[\"pl-4 flex items-center gap-1 hover:cursor-pointer\", state === 'searchForm' && form.id === searchFormId ? \"bg-selected\" : \"\"].join(' ')}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 0 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25\" />\n                                    </svg>\n                                    {formTitle}\n                                </li>\n                            </Link>;\n        })}\n                </ul>\n                <li className={[\"flex items-center gap-1 font-bold\", state === 'dictionary' && !dictionaryId ? \"bg-selected\" : \"\"].join(' ')}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0 1 11.186 0Z\" />\n                    </svg>\n                    <Link to={`/dashboard/db_struct?state=dictionary&dictionaryId=0`}>\n                        {t('dictionaries')}\n                    </Link>\n                </li>\n                <ul>\n                    {dictionaries.map(dict => {\n          let dicTitle = dict[`title_${i18n.language}`];\n          return <Link key={dict.id} to={`/dashboard/db_struct?state=dictionary&dictionaryId=${dict.id}`}>\n                                <li className={[\"pl-4 flex items-center gap-1 hover:cursor-pointer\", state === 'dictionary' && dict.id === dictionaryId ? \"bg-selected\" : \"\"].join(' ')}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 0 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25\" />\n                                    </svg>\n                                    {dicTitle}\n                                </li>\n                            </Link>;\n        })}\n                </ul>\n            </ul>\n        </div>;\n}\n_s(DbStructNav, \"tesxYUfym1EdybWre/Q68xlYjtY=\", false, function () {\n  return [useTranslation];\n});\n_c = DbStructNav;\nvar _c;\n$RefreshReg$(_c, \"DbStructNav\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/forms/form_dict.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/forms/form_dict.tsx\");\n  import.meta.hot.lastModified = \"1710241207784.067\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport CustomInput from \"~/components/UI/elements/custom_input\";\nimport { useTranslation } from \"react-i18next\";\nexport default function DictionaryForm({\n  dictionary\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const handleDelete = async event => {\n    const response = confirm(t('confirm_delete'));\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <>\n            <div className=\"flex flex-row gap-3 justify-end\">\n                <CustomButton className=\"hidden\" id=\"updateDictionaryButton\" form=\"updateDictionary\" type=\"submit\" name=\"_action\" value=\"updateDictionary\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 12.75 6 6 9-13.5\" />\n                    </svg>\n                    {t('save')}\n                </CustomButton>\n                <Form method=\"post\">\n                    <input type=\"hidden\" name=\"id\" defaultValue={dictionary.id ? dictionary.id : ''} />\n                    <CustomButton className=\"bg-red-500 hover:shadow-red-100\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteDictionary\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                        </svg>\n                        {t('delete')}\n                    </CustomButton>\n                </Form>\n            </div>\n            <Form id=\"updateDictionary\" key={dictionary?.id} className=\"flex flex-col gap-3\" method=\"post\">\n                <input type=\"hidden\" name=\"id\" defaultValue={dictionary.id ? dictionary.id : ''} />\n                <CustomInput id={dictionary.id} title={t('title_kk')} type=\"text\" defaultValue={dictionary?.title_kk} name=\"title_kk\" required={true} onChange={() => {\n        const button = document.getElementById(\"updateDictionaryButton\");\n        button.click();\n      }} size={100} />\n                <CustomInput id={dictionary.id} title={t('title_ru')} type=\"text\" defaultValue={dictionary?.title_ru} name=\"title_ru\" required={true} onChange={() => {\n        const button = document.getElementById(\"updateDictionaryButton\");\n        button.click();\n      }} size={100} />\n            </Form>\n        </>;\n}\n_s(DictionaryForm, \"tesxYUfym1EdybWre/Q68xlYjtY=\", false, function () {\n  return [useTranslation];\n});\n_c = DictionaryForm;\nvar _c;\n$RefreshReg$(_c, \"DictionaryForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/forms/form_group.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/forms/form_group.tsx\");\n  import.meta.hot.lastModified = \"1710419693916.609\";\n}\n// REMIX HMR END\n\nimport { Form, useNavigate } from \"@remix-run/react\";\nimport { FieldType } from \"@prisma/client\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport CustomInput from \"~/components/UI/elements/custom_input\";\nimport { useTranslation } from \"react-i18next\";\nexport default function GroupForm({\n  group,\n  dicts\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const handleDelete = async event => {\n    const response = confirm(t('confirm_delete'));\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <>\n            <div className=\"flex flex-row gap-3 justify-end\">\n                <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" form=\"addInputFieldForm\" type=\"submit\" name=\"_action\" value=\"createEmptyInputField\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                    </svg>\n                    {t('add_field')}\n                </CustomButton>\n                <CustomButton className=\"hidden\" id=\"updateGroupButton\" color=\"green\" form=\"updateGroupForm\" type=\"submit\" name=\"_action\" value=\"updateGroup\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 12.75 6 6 9-13.5\" />\n                    </svg>\n                    {t('save')}\n                </CustomButton>\n                <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" form=\"deleteGroupForm\" type=\"submit\" name=\"_action\" value=\"deleteGroup\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                    </svg>\n                    {t('delete')}\n                </CustomButton>\n            </div>\n            <Form id=\"addInputFieldForm\" method=\"post\">\n                <input type=\"hidden\" name=\"inputFormId\" defaultValue={group.inputFormId} />\n                <input type=\"hidden\" name=\"groupId\" defaultValue={group.id} />\n                <input type=\"hidden\" name=\"cnt\" defaultValue={group.fields.length + 1} />\n            </Form>\n            <Form id=\"updateGroupForm\" className=\"flex flex-col gap-3\" method=\"post\">\n                <input type=\"hidden\" name=\"id\" defaultValue={group.id} />\n                <input type=\"hidden\" name=\"inputFormId\" defaultValue={group.inputFormId} />\n\n                <CustomInput id=\"group_pos\" type=\"number\" name=\"pos\" title={t('pos')} defaultValue={group?.pos} required={true} onChange={() => {\n        const button = document.getElementById(\"updateGroupButton\");\n        button.click();\n      }} subClass=\"w-16\" />\n                <CustomInput id=\"group_title_kk\" type=\"text\" name=\"title_kk\" title={t('title_kk')} defaultValue={group?.title_kk} required={true} onChange={() => {\n        const button = document.getElementById(\"updateGroupButton\");\n        button.click();\n      }} size={100} />\n                <CustomInput id=\"group_title_ru\" type=\"text\" name=\"title_ru\" title={t('title_ru')} defaultValue={group?.title_ru} required={true} onChange={() => {\n        const button = document.getElementById(\"updateGroupButton\");\n        button.click();\n      }} size={100} />\n                <CustomInput id=\"group_ismulty\" type=\"checkbox\" name=\"isMulty\" title={t('is_multy')} checked={group?.isMulty ? true : false} required={false} onChange={() => {\n        const button = document.getElementById(\"updateGroupButton\");\n        button.click();\n      }} />\n            </Form>\n            {group?.fields && group.fields.map(field => <Form className=\"hidden\" id={`updateInputFieldForm_${field.id}`} key={`updateInputFieldForm_${field.id}`} method=\"post\">\n                    <input type=\"hidden\" name=\"id\" defaultValue={field.id} />\n                    <input type=\"hidden\" name=\"groupId\" defaultValue={field.groupId} />\n                    <CustomButton className=\"bg-green-500 hover:shadow-green-100\" id={`updateInputFieldButton_${field.id}`} form={`updateInputFieldForm_${field.id}`} type=\"submit\" name=\"_action\" value=\"updateInputField\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 12.75 6 6 9-13.5\" />\n                        </svg>\n                        {t('save')}\n                    </CustomButton>\n                </Form>)}\n            <div className=\"overflow-x-auto mt-4\">\n                <table className=\"w-full\">\n                    <thead className=\"bg-primary text-white text-center\">\n                        <tr>\n                            <th className=\"p-1 text-sm border\">#</th>\n                            <th className=\"p-1 text-sm border\">ID</th>\n                            <th className=\"p-1 text-sm border\">1</th>\n                            <th className=\"p-1 text-sm border\">2</th>\n                            <th className=\"p-1 text-sm border\">3</th>\n                            <th className=\"p-1 text-sm border\">{t('title_kk')}</th>\n                            <th className=\"p-1 text-sm border\">{t('title_ru')}</th>\n                            <th className=\"p-1 text-sm border\">{t('type_data')}</th>\n                            <th className=\"p-1 text-sm border\">{t('dictionary')}</th>\n                            <th className=\"p-1 text-sm border\">{t('len')}</th>\n                            <th className=\"p-1 text-sm border\">{t('precision')}</th>\n                            <th className=\"p-1 text-sm border\">4</th>\n                            <th className=\"p-1 text-sm border\">5</th>\n                            <th className=\"p-1 text-sm border\">6</th>\n                            <th className=\"p-1 text-sm border\">7</th>\n                            <th className=\"p-1 text-sm border\">8</th>\n                            <th className=\"p-1 text-sm border\"></th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"text-center\">\n                        {group?.fields && group.fields.map((field, index) => <tr key={field.id}>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">{index + 1}</td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">F{field.id}</td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 w-20\">\n                                    <input className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} type=\"number\" name=\"pos\" defaultValue={field.pos} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 w-20\">\n                                    <input className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} type=\"number\" name=\"colSpan\" min={1} max={3} defaultValue={field.colSpan} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 w-20\">\n                                    <input className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} type=\"number\" name=\"colStart\" min={1} max={3} defaultValue={field.colStart} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 hover:cursor-pointer hover:underline w-40\">\n                                    <input className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} type=\"text\" name=\"title_kk\" defaultValue={field.title_kk} maxLength={23} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 hover:cursor-pointer hover:underline w-40\">\n                                    <input className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} type=\"text\" name=\"title_ru\" defaultValue={field.title_ru} maxLength={23} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <select className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} name=\"fieldType\" defaultValue={field.fieldType} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }}>\n                                        {Object.keys(FieldType).map(key => <option key={key} value={key}>{key}</option>)}\n                                    </select>\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    {field.fieldType === 'DICT' ? <select className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} name=\"dicId\" defaultValue={String(field.dicId)} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }}>\n                                            <option value=\"\">-</option>\n                                            {dicts.map(dic => <option key={dic.id} value={dic.id}>{dic[`title_${i18n.language}`]}</option>)}\n                                        </select> : null}\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 w-20\">\n                                    <input className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} type=\"number\" name=\"len\" defaultValue={field.len} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 w-20\">\n                                    <input className=\"text-sm w-full focus:outline-none\" form={`updateInputFieldForm_${field.id}`} type=\"number\" name=\"precision\" defaultValue={field.precision} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <input className=\"text-sm\" form={`updateInputFieldForm_${field.id}`} type=\"checkbox\" name=\"isKey\" defaultChecked={field.isKey} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <input className=\"text-sm\" form={`updateInputFieldForm_${field.id}`} type=\"checkbox\" name=\"isVisible\" defaultChecked={field.isVisible} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <input className=\"text-sm\" form={`updateInputFieldForm_${field.id}`} type=\"checkbox\" name=\"isEnable\" defaultChecked={field.isEnable} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <input className=\"text-sm\" form={`updateInputFieldForm_${field.id}`} type=\"checkbox\" name=\"isRequire\" defaultChecked={field.isRequire} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <input className=\"text-sm\" form={`updateInputFieldForm_${field.id}`} type=\"checkbox\" name=\"isDuplicate\" defaultChecked={field.isDuplicate} onChange={() => {\n                const button = document.getElementById(`updateInputFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 hover:cursor-pointer\">\n                                    <Form method=\"post\">\n                                        <input type=\"hidden\" name=\"id\" defaultValue={field?.id ? field.id : ''} />\n                                        <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteInputField\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                                            </svg>\n                                        </CustomButton>\n                                    </Form>\n                                </td>\n                            </tr>)}\n                    </tbody>\n                </table>\n            </div>\n            <Form id=\"deleteGroupForm\" method=\"post\" onSubmit={event => {\n      const response = confirm(\"Please confirm you want to delete this record.\");\n      if (!response) {\n        event.preventDefault();\n      }\n    }}>\n                <input type=\"hidden\" name=\"inputFormId\" defaultValue={group.inputFormId} />\n                <input type=\"hidden\" name=\"id\" defaultValue={group.id} />\n            </Form>\n            <div className=\"pt-5\">\n                <div className=\"text-sm\">1-{t('pos')}</div>\n                <div className=\"text-sm\">2-{t('span')}</div>\n                <div className=\"text-sm\">3-{t('start')}</div>\n                <div className=\"text-sm\">4-{t('is_key')}</div>\n                <div className=\"text-sm\">5-{t('is_visible')}</div>\n                <div className=\"text-sm\">6-{t('is_enable')}</div>\n                <div className=\"text-sm\">7-{t('is_require')}</div>\n                <div className=\"text-sm\">8-{t('duplicate')}</div>\n            </div>\n        </>;\n}\n_s(GroupForm, \"snclS1U3LXStivP937A7v9MkjWg=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = GroupForm;\nvar _c;\n$RefreshReg$(_c, \"GroupForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/forms/form_input.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/forms/form_input.tsx\");\n  import.meta.hot.lastModified = \"1710242196366.971\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport CustomInput from \"~/components/UI/elements/custom_input\";\nimport { useTranslation } from \"react-i18next\";\nexport default function InputFormForm({\n  inputForm,\n  groups\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <>\n            <div className=\"flex flex-row gap-3 justify-end\">\n                <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" form=\"addGroupForm\" type=\"submit\" name=\"_action\" value=\"createEmptyGroup\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                    </svg>\n                    {t('add_group')}\n                </CustomButton>\n                <CustomButton className=\"hidden\" id=\"updateInputFormButton\" form=\"updateInputForm\" type=\"submit\" name=\"_action\" value=\"updateInputForm\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 12.75 6 6 9-13.5\" />\n                    </svg>\n                    {t('save')}\n                </CustomButton>\n                <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" form=\"deleteInputForm\" type=\"submit\" name=\"_action\" value=\"deleteInputForm\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                    </svg>\n                    {t('delete')}\n                </CustomButton>\n            </div>\n            <Form id=\"addGroupForm\" key={1} method=\"post\">\n                <input type=\"hidden\" name=\"inputFormId\" defaultValue={inputForm.id ? inputForm.id : ''} />\n                <input type=\"hidden\" name=\"cnt\" defaultValue={groups.length + 1} />\n            </Form>\n            <Form id=\"updateInputForm\" key={2} className=\"flex flex-col gap-3\" method=\"post\">\n                <input type=\"hidden\" name=\"id\" defaultValue={inputForm.id ? inputForm.id : ''} />\n                <CustomInput id=\"inputForm_pos\" title={t('pos')} type=\"number\" defaultValue={inputForm?.pos} name=\"pos\" required={true} onChange={() => {\n        const button = document.getElementById(\"updateInputFormButton\");\n        button.click();\n      }} subClass=\"w-16\" />\n                <CustomInput id=\"inputForm_title_kk\" title={t('title_kk')} type=\"text\" defaultValue={inputForm?.title_kk} name=\"title_kk\" required={true} onChange={() => {\n        const button = document.getElementById(\"updateInputFormButton\");\n        button.click();\n      }} size={100} />\n                <CustomInput id=\"inputForm_title_ru\" title={t('title_ru')} type=\"text\" defaultValue={inputForm?.title_ru} name=\"title_ru\" required={true} onChange={() => {\n        const button = document.getElementById(\"updateInputFormButton\");\n        button.click();\n      }} size={100} />\n            </Form>\n            <Form id=\"deleteInputForm\" key={3} method=\"post\" onSubmit={event => {\n      const response = confirm(t('confirm_delete'));\n      if (!response) {\n        event.preventDefault();\n      }\n    }}>\n                <input type=\"hidden\" name=\"id\" defaultValue={inputForm.id ? inputForm.id : ''} />\n            </Form>\n        </>;\n}\n_s(InputFormForm, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = InputFormForm;\nvar _c;\n$RefreshReg$(_c, \"InputFormForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/forms/form_search.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/forms/form_search.tsx\");\n  import.meta.hot.lastModified = \"1710416487942.206\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport CustomInput from \"~/components/UI/elements/custom_input\";\nimport { useTranslation } from \"react-i18next\";\nexport default function SearchFormForm({\n  searchForm,\n  inputFields\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const handleDelete = async event => {\n    const response = confirm(t('confirm_delete'));\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <>\n            <div className=\"flex flex-row gap-3 justify-end\">\n                <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" form=\"addSearchFieldForm\" type=\"submit\" name=\"_action\" value=\"createEmptySearchField\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                    </svg>\n                    {t('add_field')}\n                </CustomButton>\n                <CustomButton className=\"hidden\" id=\"updateSearchFormButton\" form=\"updateSearchForm\" type=\"submit\" name=\"_action\" value=\"updateSearchForm\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 12.75 6 6 9-13.5\" />\n                    </svg>\n                    {t('save')}\n                </CustomButton>\n                <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" form=\"deleteSearchForm\" type=\"submit\" name=\"_action\" value=\"deleteSearchForm\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                    </svg>\n                    {t('delete')}\n                </CustomButton>\n            </div>\n            <Form id=\"addSearchFieldForm\" method=\"post\">\n                <input type=\"hidden\" name=\"searchFormId\" defaultValue={searchForm.id} />\n                <input type=\"hidden\" name=\"cnt\" defaultValue={searchForm.fields?.length + 1} />\n            </Form>\n            <Form id=\"updateSearchForm\" key={searchForm?.id} className=\"flex flex-col gap-3\" method=\"post\">\n                <input type=\"hidden\" name=\"id\" defaultValue={searchForm.id} />\n                <CustomInput id=\"searchForm_pos\" title={t('pos')} type=\"number\" value={searchForm?.pos} name=\"pos\" required={true} onChange={() => {\n        const button = document.getElementById(\"updateSearchFormButton\");\n        button.click();\n      }} subClass=\"w-16\" />\n                <CustomInput id=\"searchForm_title_kk\" title={t('title_kk')} type=\"text\" value={searchForm?.title_kk} name=\"title_kk\" required={true} onChange={() => {\n        const button = document.getElementById(\"updateSearchFormButton\");\n        button.click();\n      }} size={100} />\n                <CustomInput id=\"searchForm_title_ru\" title={t('title_ru')} type=\"text\" value={searchForm?.title_ru} name=\"title_ru\" required={true} onChange={() => {\n        const button = document.getElementById(\"updateSearchFormButton\");\n        button.click();\n      }} size={100} />\n            </Form>\n            <Form id=\"deleteSearchForm\" method=\"post\" onSubmit={event => {\n      const response = confirm(t('confirm_delete'));\n      if (!response) {\n        event.preventDefault();\n      }\n    }}>\n                <input type=\"hidden\" name=\"id\" defaultValue={searchForm.id ? searchForm.id : ''} />\n            </Form>\n            {searchForm?.fields && searchForm.fields.map(field => <Form className=\"hidden\" id={`updateSearchFieldForm_${field.id}`} key={`updateSearchFieldForm_${field.id}`} method=\"post\">\n                    <input type=\"hidden\" name=\"id\" defaultValue={field.id} />\n                    <input type=\"hidden\" name=\"searchFormId\" defaultValue={field.searchFormId} />\n                    <CustomButton className=\"bg-green-500 hover:shadow-green-100\" id={`updateSearchFieldButton_${field.id}`} form={`updateSearchFieldForm_${field.id}`} type=\"submit\" name=\"_action\" value=\"updateSearchField\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 12.75 6 6 9-13.5\" />\n                        </svg>\n                        {t('save')}\n                    </CustomButton>\n                </Form>)}\n            <div className=\"overflow-x-auto mt-4\">\n                <table className=\"w-full\">\n                    <thead className=\"bg-primary text-white text-center\">\n                        <tr>\n                            <th className=\"p-1 text-sm border\">#</th>\n                            <th className=\"p-1 text-sm border\">ID</th>\n                            <th className=\"p-1 text-sm border\">{t('pos')}</th>\n                            <th className=\"p-1 text-sm border\">{t('title_kk')}</th>\n                            <th className=\"p-1 text-sm border\">{t('title_ru')}</th>\n                            <th className=\"p-1 text-sm border\">{t('field')}</th>\n                            <th className=\"p-1 text-sm border\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {searchForm?.fields && searchForm.fields.map((field, index) => <tr key={field.id}>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">{index + 1}</td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">F{field.id}</td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 w-20\">\n                                    <input className=\"text-sm w-full\" form={`updateSearchFieldForm_${field.id}`} type=\"number\" name=\"pos\" defaultValue={field.pos} onChange={() => {\n                const button = document.getElementById(`updateSearchFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 hover:cursor-pointer hover:underline w-40\">\n                                    <input className=\"text-sm w-full\" form={`updateSearchFieldForm_${field.id}`} type=\"text\" name=\"title_kk\" defaultValue={field.title_kk} onChange={() => {\n                const button = document.getElementById(`updateSearchFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 hover:cursor-pointer hover:underline w-40\">\n                                    <input className=\"text-sm w-full\" form={`updateSearchFieldForm_${field.id}`} type=\"text\" name=\"title_ru\" defaultValue={field.title_ru} onChange={() => {\n                const button = document.getElementById(`updateSearchFieldButton_${field.id}`);\n                button.click();\n              }} />\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <select className=\"text-sm w-full\" form={`updateSearchFieldForm_${field.id}`} name=\"fieldId\" defaultValue={String(field.fieldId)} onChange={() => {\n                const button = document.getElementById(`updateSearchFieldButton_${field.id}`);\n                button.click();\n              }}>\n                                        <option value=\"\">-</option>\n                                        {inputFields && inputFields.map(fld => {\n                  let frm = fld.group.inputForm.pos + '. ' + fld.group.inputForm[`title_${i18n.language}`];\n                  let grp = fld.group.pos + '. ' + fld.group[`title_${i18n.language}`];\n                  let fieldTitle = frm + ' -> ' + grp + ' -> ' + fld.pos + '. ' + fld[`title_${i18n.language}`];\n                  return <option key={fld.id} value={fld.id}>\n                                                        {fieldTitle}\n                                                    </option>;\n                })}\n                                    </select>\n                                </td>\n                                <td className=\"p-1 text-sm border border-blue-gray-700 w-10\">\n                                    <Form method=\"post\">\n                                        <input type=\"hidden\" name=\"id\" defaultValue={field.id} />\n                                        <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteSearchField\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                                            </svg>\n                                        </CustomButton>\n                                    </Form>\n                                </td>\n                            </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        </>;\n}\n_s(SearchFormForm, \"tesxYUfym1EdybWre/Q68xlYjtY=\", false, function () {\n  return [useTranslation];\n});\n_c = SearchFormForm;\nvar _c;\n$RefreshReg$(_c, \"SearchFormForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/forms/forms.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/forms/forms.tsx\");\n  import.meta.hot.lastModified = \"1710416547523.514\";\n}\n// REMIX HMR END\n\nimport DictionaryForm from \"./form_dict\";\nimport GroupForm from \"./form_group\";\nimport InputFormForm from \"./form_input\";\nimport SearchFormForm from \"./form_search\";\nexport default function Forms({\n  state,\n  dictionaries,\n  groups,\n  inputForm,\n  searchForm,\n  dictionary,\n  group,\n  inputFields\n}) {\n  return <div className=\"p-4 border w-3/4\">\n            {state === 'inputForm' && inputForm ? <InputFormForm inputForm={inputForm} groups={groups} /> : state === 'searchForm' && searchForm ? <SearchFormForm searchForm={searchForm} inputFields={inputFields} /> : state === 'dictionary' && dictionary ? <DictionaryForm dictionary={dictionary} /> : state === 'group' && group ? <GroupForm group={group} dicts={dictionaries} /> : null}\n        </div>;\n}\n_c = Forms;\nvar _c;\n$RefreshReg$(_c, \"Forms\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/db_struct/view.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/db_struct/view.tsx\");\n  import.meta.hot.lastModified = \"1709721269297.61\";\n}\n// REMIX HMR END\n\nimport Buttons from \"./buttons/buttons\";\nimport ErrorMessage from \"../../elements/error_message\";\nimport Panel from \"../../elements/panel\";\nimport DbStructNav from \"./navigator\";\nimport Forms from \"./forms/forms\";\nexport default function DbStructView({\n  errors,\n  state,\n  inputForms,\n  searchForms,\n  dictionaries,\n  groups,\n  inputFormId,\n  searchFormId,\n  dictionaryId,\n  groupId,\n  inputForm,\n  searchForm,\n  dictionary,\n  group,\n  inputFields\n}) {\n  return <div className=\"mx-1 flex flex-col gap-3 h-[calc(100vh-5rem)]\">\n            <ErrorMessage errors={errors} />\n            <Panel className=\"h-full overflow-auto\">\n                <Buttons state={state} dictionaries_count={dictionaries && dictionaries.length ? dictionaries.length : 0} inputForms_count={inputForms && inputForms.length ? inputForms.length : 0} searchForms_count={searchForms && searchForms.length ? searchForms.length : 0} />\n                <div className=\"flex flex-row\">\n                    <DbStructNav state={state} inputForms={inputForms} searchForms={searchForms} dictionaries={dictionaries} groups={groups} inputFormId={inputFormId} searchFormId={searchFormId} dictionaryId={dictionaryId} groupId={groupId} />\n                    <Forms state={state} dictionaries={dictionaries} groups={groups} inputForm={inputForm} searchForm={searchForm} dictionary={dictionary} group={group} inputFields={inputFields} />\n                </div>\n            </Panel>\n        </div>;\n}\n_c = DbStructView;\nvar _c;\n$RefreshReg$(_c, \"DbStructView\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_react", "import_jsx_dev_runtime", "_s", "MaterialTailwind", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
