{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.users.tsx", "../../../app/components/UI/widgets/users/dlg_user.tsx", "../../../app/components/UI/widgets/users/btn_new_user.tsx", "../../../app/components/UI/widgets/users/tbl_users.tsx", "../../../app/components/UI/widgets/users/btn_delete_user.tsx", "../../../app/components/UI/widgets/users/btn_edit_user.tsx", "../../../app/components/UI/widgets/users/view.tsx", "../../../app/components/UI/widgets/users/btn_delete_role.tsx", "../../../app/components/UI/widgets/users/tbl_roles.tsx", "../../../app/components/UI/widgets/users/tbl_ainputforms.tsx", "../../../app/components/UI/widgets/users/btn_delete_ainputform.tsx", "../../../app/components/UI/widgets/users/btn_add_ainputform.tsx", "../../../app/components/UI/widgets/users/btn_add_role.tsx", "../../../app/components/UI/widgets/users/btn_add_asearchform.tsx", "../../../app/components/UI/widgets/users/tbl_asearchforms.tsx", "../../../app/components/UI/widgets/users/btn_delete_asearchform.tsx", "../../../app/components/UI/widgets/users/tbl_users_only_login.tsx", "../../../app/components/UI/widgets/users/btn_delete_userrole.tsx", "../../../app/components/UI/widgets/users/tbl_roles_only_title.tsx", "../../../app/components/UI/widgets/users/btn_add_userrole.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard.users.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard.users.tsx\");\n  import.meta.hot.lastModified = \"1710246472441.429\";\n}\n// REMIX HMR END\n\nimport { Prisma } from \"@prisma/client\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\nimport api from \"~/components/api\";\nimport UsersView from \"~/components/UI/widgets/users/view\";\nexport async function loader({\n  request\n}) {\n  const roles = await api.users.getRoles();\n  const users = await api.users.getUsers();\n  const departments = await api.users.getDepartments();\n  const inputForms = await api.db.getInputForms();\n  const searchForms = await api.db.getSearchForms();\n  const url = new URL(request.url);\n  const state = url.searchParams.get(\"state\");\n  const roleId = url.searchParams.get(\"roleId\");\n  const userId = url.searchParams.get(\"userId\");\n  const isNewUser = url.searchParams.get(\"new_user\");\n  const currenUserId = url.searchParams.get(\"current_user\");\n  let user;\n  if (isNewUser) {\n    user = {};\n  } else if (userId) {\n    user = await api.users.getUser(Number(userId));\n    user = {\n      ...user,\n      password: undefined\n    };\n  }\n  let role;\n  let accessInputForms = [];\n  let accessSearchForms = [];\n  if (roleId) {\n    role = await api.users.getRole(Number(roleId));\n    accessInputForms = await api.users.getAccessInputForms(Number(roleId));\n    accessSearchForms = await api.users.getAccessSearchForms(Number(roleId));\n  }\n  let userRoles = [];\n  if (currenUserId) {\n    userRoles = await api.users.getUserRoles(Number(currenUserId));\n  }\n  return json({\n    state,\n    role,\n    roles,\n    isNewUser,\n    user,\n    users,\n    departments,\n    inputForms,\n    searchForms,\n    accessInputForms,\n    accessSearchForms,\n    currenUserId,\n    userRoles\n  });\n}\nexport async function action({\n  request\n}) {\n  let errors = null;\n  const formData = await request.formData();\n  const {\n    _action,\n    ...values\n  } = Object.fromEntries(formData);\n  if (_action === 'createUser') {\n    const createUser = {\n      id: Number(values.id),\n      isActive: Boolean(values.isActive),\n      login: String(values.login),\n      password: String(values.password),\n      firstName: String(values.firstName),\n      lastName: String(values.lastName),\n      middleName: String(values.middleName),\n      departmentId: Number(values.departmentId),\n      expiredPwd: new Date(String(values.expiredPwd)),\n      createdAt: null,\n      updatedAt: null\n    };\n    try {\n      await api.users.createUser(createUser);\n      return redirect(\"/dashboard/users\");\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateUser') {\n    const userId = Number(values.id);\n    const updateUser = {\n      id: Number(values.id),\n      isActive: Boolean(values.isActive),\n      login: String(values.login),\n      password: String(values.password),\n      firstName: String(values.firstName),\n      lastName: String(values.lastName),\n      middleName: String(values.middleName),\n      departmentId: Number(values.departmentId),\n      expiredPwd: new Date(String(values.expiredPwd)),\n      createdAt: null,\n      updatedAt: null\n    };\n    try {\n      await api.users.updateUser(userId, updateUser);\n      return redirect(\"/dashboard/users\");\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteUser') {\n    const userId = Number(values.id);\n    try {\n      await api.users.deleteUser(userId);\n      return redirect(\"/dashboard/users\");\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptyRole') {\n    try {\n      await api.users.createEmptyRole(Number(values.cnt));\n      return redirect(\"/dashboard/users\");\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateRole') {\n    const roleId = Number(values.id);\n    const updateRole = {\n      id: Number(values.id),\n      title_kk: String(values.title_kk),\n      title_ru: String(values.title_ru)\n    };\n    try {\n      await api.users.updateRole(roleId, updateRole);\n      return redirect(\"/dashboard/users\");\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteRole') {\n    const roleId = Number(values.id);\n    try {\n      await api.users.deleteRole(roleId);\n      return redirect(\"/dashboard/users\");\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptyAccessInput') {\n    try {\n      await api.users.createEmptyAccessInputForm(Number(values.roleId));\n      return redirect(`/dashboard/users?state=roles&roleId=${values.roleId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateAccessInput') {\n    const aformId = Number(values.id);\n    const updateAccessInput = {\n      id: Number(values.id),\n      roleId: Number(values.roleId),\n      formId: Number(values.formId),\n      accessType: String(values.accessType)\n    };\n    try {\n      await api.users.updateAccessInputForm(aformId, updateAccessInput);\n      return redirect(`/dashboard/users?state=roles&roleId=${values.roleId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteAccessInput') {\n    const aformId = Number(values.id);\n    try {\n      await api.users.deleteAccessInputForm(aformId);\n      return redirect(`/dashboard/users?state=roles&roleId=${values.roleId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptyAccessSearch') {\n    try {\n      await api.users.createEmptyAccessSearchForm(Number(values.roleId));\n      return redirect(`/dashboard/users?state=roles&roleId=${values.roleId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateAccessSearch') {\n    const aformId = Number(values.id);\n    const updateAccessSearch = {\n      id: Number(values.id),\n      roleId: Number(values.roleId),\n      formId: Number(values.formId),\n      accessType: String(values.accessType)\n    };\n    try {\n      await api.users.updateAccessSearchForm(aformId, updateAccessSearch);\n      return redirect(`/dashboard/users?state=roles&roleId=${values.roleId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteAccessSearch') {\n    const aformId = Number(values.id);\n    try {\n      await api.users.deleteAccessSearchForm(aformId);\n      return redirect(`/dashboard/users?state=roles&roleId=${values.roleId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'createEmptyUserRole') {\n    try {\n      await api.users.createEmptyUserRole(Number(values.userId));\n      return redirect(`/dashboard/users?state=users_roles&current_user=${values.userId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'updateUserRole') {\n    const userRoleId = Number(values.id);\n    const updateUserRole = {\n      id: Number(values.id),\n      userId: Number(values.userId),\n      roleId: Number(values.roleId)\n    };\n    try {\n      await api.users.updateUserRole(userRoleId, updateUserRole);\n      return redirect(`/dashboard/users?state=roles&current_user=${values.userId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  if (_action === 'deleteUserRole') {\n    const userRoleId = Number(values.id);\n    try {\n      await api.users.deleteUserRole(userRoleId);\n      return redirect(`/dashboard/users?state=users_roles&current_user=${values.userId}`);\n    } catch (e) {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        errors = e.message;\n      }\n    }\n  }\n  return json({\n    errors\n  });\n}\nexport default function Users() {\n  _s();\n  const {\n    state,\n    role,\n    roles,\n    isNewUser,\n    user,\n    users,\n    departments,\n    inputForms,\n    searchForms,\n    accessInputForms,\n    accessSearchForms,\n    currenUserId,\n    userRoles\n  } = useLoaderData();\n  const data = useActionData();\n  return <UsersView state={state} roles={roles} role={role} isNewUser={isNewUser ? true : false} user={user} users={users} departments={departments} inputForms={inputForms} searchForms={searchForms} accessInputForms={accessInputForms} accessSearchForms={accessSearchForms} currentUserId={Number(currenUserId)} userRoles={userRoles} errors={data?.errors ? data.errors : undefined} />;\n}\n_s(Users, \"qvXjFPalKHSWt9TJ+mTH8UosF/w=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/dlg_user.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/dlg_user.tsx\");\n  import.meta.hot.lastModified = \"1710331139876.001\";\n}\n// REMIX HMR END\n\nimport MaterialTailwind from \"@material-tailwind/react\";\nconst {\n  Dialog,\n  Card,\n  CardBody,\n  CardFooter\n} = MaterialTailwind;\nimport { Form } from \"@remix-run/react\";\nimport moment from \"moment\";\nimport CustomInput from \"../../elements/custom_input\";\nimport CustomSelect from \"../../elements/custom_select\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nexport default function UserDialog({\n  isNew,\n  user,\n  departments,\n  errors\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    setOpen(user ? true : false);\n  }, [user]);\n  return <Dialog placeholder=\"\" size=\"sm\" open={open} handler={() => setOpen(false)} className=\"bg-transparent shadow-none\">\n            <Card className=\"mx-auto w-full\" placeholder=\"\">\n                <CardBody className=\"flex flex-col gap-4 overflow-auto\" placeholder=\"\">\n                    <Form id=\"userForm\" key={user?.id} className=\"flex flex-col gap-3\" method=\"post\">\n                        <input type=\"hidden\" name=\"id\" defaultValue={user?.id ? user.id : ''} />\n                        <CustomInput id=\"user_is_active\" type=\"checkbox\" name=\"isActive\" title={t('is_active')} defaultChecked={user?.isActive} />\n                        <CustomInput id=\"user_login\" type=\"text\" name=\"login\" title={t('login')} defaultValue={user?.login} required={true} readOnly={!isNew} size={45} />\n                        <CustomInput id=\"user_password\" type=\"password\" name=\"password\" title={t('password')} defaultValue={user?.password} required={false} size={45} />\n                        <CustomInput id=\"user_firsName\" type=\"text\" name=\"firstName\" title={t('first_name')} defaultValue={user?.firstName ? user.firstName : \"\"} required={false} size={45} />\n                        <CustomInput id=\"user_lastName\" type=\"text\" name=\"lastName\" title={t('last_name')} defaultValue={user?.lastName ? user.lastName : \"\"} required={false} size={45} />\n                        <CustomInput id=\"user_middleName\" type=\"text\" name=\"middleName\" title={t('middle_name')} defaultValue={user?.middleName ? user.middleName : \"\"} required={false} size={45} />\n                        <CustomSelect id=\"user_department\" name=\"departmentId\" title={t('department')} defaultValue={user?.departmentId ? user.departmentId : \"\"} required={false}>\n                            <option>-</option>\n                            {departments.map(item => <option value={item.id}>{item[`title_${i18n.language}`]}</option>)}\n                        </CustomSelect>\n                        <CustomInput id=\"user_expiredPwd\" type=\"date\" name=\"expiredPwd\" title={t('expired_password')} defaultValue={moment(user?.expiredPwd).format(\"YYYY-MM-DD\")} required={true} size={45} />\n                    </Form>\n                    <span className=\"text-red-500 text-sm\">{errors}</span>\n                </CardBody>\n                <CardFooter className=\"pt-0 flex flex-row gap-3 justify-center\" placeholder=\"\">\n                    <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" form=\"userForm\" type=\"submit\" name=\"_action\" value={isNew ? \"createUser\" : \"updateUser\"}>\n                        {t('save')}\n                    </CustomButton>\n                    <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" onClick={() => setOpen(false)}>\n                        {t('close')}\n                    </CustomButton>\n                </CardFooter>\n            </Card>\n        </Dialog>;\n}\n_s(UserDialog, \"fkoagGwCabd9KhwTM9eG2tS/77g=\", false, function () {\n  return [useTranslation];\n});\n_c = UserDialog;\nvar _c;\n$RefreshReg$(_c, \"UserDialog\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_new_user.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_new_user.tsx\");\n  import.meta.hot.lastModified = \"1710231100568.955\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonNewUser() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation();\n  return <CustomButton className=\"bg-primary hover:shadow-blue-gray-100\" onClick={() => navigate(\"/dashboard/users?new_user=True\")}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n            </svg>\n            {t('new_user')}\n        </CustomButton>;\n}\n_s(ButtonNewUser, \"GK/KaWFRYoH2IJJH58+SEoGCCyc=\", false, function () {\n  return [useNavigate, useTranslation];\n});\n_c = ButtonNewUser;\nvar _c;\n$RefreshReg$(_c, \"ButtonNewUser\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/tbl_users.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/tbl_users.tsx\");\n  import.meta.hot.lastModified = \"1710238211356.216\";\n}\n// REMIX HMR END\n\nimport moment from \"moment\";\nimport { useNavigate } from \"@remix-run/react\";\nimport ButtonDeleteUser from \"./btn_delete_user\";\nimport { useTranslation } from \"react-i18next\";\nimport ButtonEditUser from \"./btn_edit_user\";\nexport default function UsersTable({\n  currentUserId,\n  users,\n  departments\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation();\n  return <table className=\"w-full\">\n            <thead className=\"bg-primary text-white text-center\">\n                <tr>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">#</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('is_active')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('login')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('first_name')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('last_name')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('middle_name')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('department')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('expired_password')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('created')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('updated')}</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\"></th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\"></th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.map((user, index) => <tr key={user.id} className={user?.id === currentUserId ? \"bg-selected hover:cursor-pointer\" : \" hover:cursor-pointer\"}>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>{index + 1}</td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {user.isActive ? t('active') : t('not_active')}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {user.login}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {user.firstName}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {user.lastName}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {user.middleName}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {departments.find(item => item.id === user.departmentId)?.title}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {moment(user.expiredPwd).format('DD.MM.YYYY')}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {moment(user.createdAt).format('DD.MM.YYYY H:m:s')}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\" onClick={() => navigate(`/dashboard/users?state=users&current_user=${user.id}`)}>\n                            {moment(user.updatedAt).format('DD.MM.YYYY H:m:s')}\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">\n                            <ButtonEditUser userId={user.id} />\n                        </td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">\n                            <ButtonDeleteUser userId={user.id} />\n                        </td>\n                    </tr>)}\n            </tbody>\n        </table>;\n}\n_s(UsersTable, \"GK/KaWFRYoH2IJJH58+SEoGCCyc=\", false, function () {\n  return [useNavigate, useTranslation];\n});\n_c = UsersTable;\nvar _c;\n$RefreshReg$(_c, \"UsersTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_delete_user.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_delete_user.tsx\");\n  import.meta.hot.lastModified = \"1710238597897.079\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonDeleteUser({\n  userId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleDelete = async event => {\n    const response = confirm(t('confirm_delete'));\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"id\" defaultValue={userId} />\n            <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteUser\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                </svg>\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonDeleteUser, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonDeleteUser;\nvar _c;\n$RefreshReg$(_c, \"ButtonDeleteUser\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_edit_user.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_edit_user.tsx\");\n  import.meta.hot.lastModified = \"1710238678078.705\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonEditUser({\n  userId\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation();\n  return <CustomButton className=\"bg-primary hover:shadow-blue-gray-100\" onClick={() => navigate(`/dashboard/users?state=users&userId=${userId}`)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\" />\n            </svg>\n        </CustomButton>;\n}\n_s(ButtonEditUser, \"GK/KaWFRYoH2IJJH58+SEoGCCyc=\", false, function () {\n  return [useNavigate, useTranslation];\n});\n_c = ButtonEditUser;\nvar _c;\n$RefreshReg$(_c, \"ButtonEditUser\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/view.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/view.tsx\");\n  import.meta.hot.lastModified = \"1710238390874.407\";\n}\n// REMIX HMR END\n\nimport UserDialog from \"./dlg_user\";\nimport ButtonNewUser from \"./btn_new_user\";\nimport Panel from \"../../elements/panel\";\nimport UsersTable from \"./tbl_users\";\nimport ErrorMessage from \"../../elements/error_message\";\nimport MaterialTailwind from \"@material-tailwind/react\";\nimport { useTranslation } from \"react-i18next\";\nimport RolesTable from \"./tbl_roles\";\nimport AccessInputFormsTable from \"./tbl_ainputforms\";\nimport ButtonAddAccessInputForm from \"./btn_add_ainputform\";\nimport ButtonAddRole from \"./btn_add_role\";\nimport ButtonAddAccessSearchForm from \"./btn_add_asearchform\";\nimport AccessSearchFormsTable from \"./tbl_asearchforms\";\nimport UsersOnlyLoginTable from \"./tbl_users_only_login\";\nimport RolesOnlyTitleTable from \"./tbl_roles_only_title\";\nimport ButtonAddUserRole from \"./btn_add_userrole\";\nconst {\n  Tab,\n  TabPanel,\n  Tabs,\n  TabsBody,\n  TabsHeader\n} = MaterialTailwind;\nexport default function UsersView({\n  state,\n  role,\n  roles,\n  isNewUser,\n  user,\n  users,\n  departments,\n  inputForms,\n  searchForms,\n  accessInputForms,\n  accessSearchForms,\n  currentUserId,\n  userRoles,\n  errors\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <div className=\"mx-1 flex flex-col gap-3 h-[calc(100vh-5rem)]\">\n            <ErrorMessage errors={errors} />\n            <UserDialog isNew={isNewUser} user={user} departments={departments} errors={errors} />\n            <Panel className=\"h-full overflow-auto\">\n                <Tabs value={state ? state : \"users\"}>\n                    <TabsHeader placeholder=\"\">\n                        <Tab className=\"capitalize text-primary font-bold\" value='users' placeholder=\"\">\n                            {t('users')}\n                        </Tab>\n                        <Tab className=\"capitalize text-primary font-bold\" value='roles' placeholder=\"\">\n                            {t('roles')}\n                        </Tab>\n                        <Tab className=\"capitalize text-primary font-bold\" value='users-roles' placeholder=\"\">\n                            {t('users-roles')}\n                        </Tab>\n                    </TabsHeader>\n                    <TabsBody animate={{\n          initial: {\n            x: 250\n          },\n          mount: {\n            x: 0\n          },\n          unmount: {\n            x: 250\n          }\n        }} placeholder=\"\">\n                        <TabPanel className=\"p-1\" value='users'>\n                            <div className=\"mb-2 flex justify-between py-2 px-2 border border-blue-gray-100\">\n                                <div className=\"flex items-center gap-3\">\n                                    <ButtonNewUser />\n                                </div>\n                            </div>\n                            <UsersTable currentUserId={currentUserId} users={users} departments={departments} />\n                        </TabPanel>\n                        <TabPanel className=\"p-1\" value=\"users-roles\">\n                            <div className=\"mt-5 p-1 border flex gap-20\">\n                                <div className=\"w-1/2 flex flex-col gap-3\">\n                                    <h1 className=\"text-bold text-primary\">{t('users')}</h1>\n                                    <div className=\"w-full\">\n                                        <UsersOnlyLoginTable users={users} currentUserId={currentUserId} />\n                                    </div>\n                                </div>\n                                <div className=\"w-1/2 flex flex-col gap-3\">\n                                    <h1 className=\"text-bold text-primary\">{t('roles')}</h1>\n                                    {currentUserId ? <ButtonAddUserRole userId={currentUserId} /> : null}\n                                    <RolesOnlyTitleTable roles={roles} userRoles={userRoles} />\n                                </div>\n                            </div>\n                        </TabPanel>\n                        <TabPanel className=\"p-1\" value=\"roles\">\n                            <div className=\"mt-5 p-1 border flex flex-col gap-3\">\n                                <h1 className=\"text-bold text-primary\">{t('roles')}</h1>\n                                <div>\n                                    <ButtonAddRole count={roles.length} />\n                                </div>\n                                <RolesTable role={role} roles={roles} />\n                            </div>\n                            <div className=\"mt-5 p-1 border flex flex-col gap-3\">\n                                <h1 className=\"text-bold text-primary\">{t('access_inputforms')}</h1>\n                                <div>\n                                    {role && <ButtonAddAccessInputForm roleId={role.id} />}\n                                </div>\n                                <AccessInputFormsTable aforms={accessInputForms} inputForms={inputForms} />\n                            </div>\n                            <div className=\"mt-5 p-1 border flex flex-col gap-3\">\n                                <h1 className=\"text-bold text-primary\">{t('access_searchforms')}</h1>\n                                <div>\n                                    {role && <ButtonAddAccessSearchForm roleId={role.id} />}\n                                </div>\n                                <AccessSearchFormsTable aforms={accessSearchForms} searchForms={searchForms} />\n                            </div>\n                        </TabPanel>\n                    </TabsBody>\n                </Tabs>\n\n            </Panel>\n        </div>;\n}\n_s(UsersView, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = UsersView;\nvar _c;\n$RefreshReg$(_c, \"UsersView\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_delete_role.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_delete_role.tsx\");\n  import.meta.hot.lastModified = \"1710238595541.048\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonDeleteRole({\n  roleId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleDelete = async event => {\n    const response = confirm(t('confirm_delete'));\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"id\" defaultValue={roleId} />\n            <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteRole\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                </svg>\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonDeleteRole, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonDeleteRole;\nvar _c;\n$RefreshReg$(_c, \"ButtonDeleteRole\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/tbl_roles.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/tbl_roles.tsx\");\n  import.meta.hot.lastModified = \"1710246361755.381\";\n}\n// REMIX HMR END\n\nimport { Form, useNavigate } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport ButtonDeleteRole from \"./btn_delete_role\";\nexport default function RolesTable({\n  role,\n  roles\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  return <>\n            {roles.map(role => <Form key={role.id} method=\"post\" className=\"hidden\" id={`updateRoleForm_${role.id}`}>\n                    <input type=\"hidden\" name=\"id\" defaultValue={role.id} />\n                    <input id={`updateRoleButton_${role.id}`} type=\"submit\" name=\"_action\" value=\"updateRole\" />\n                </Form>)}\n            <table className=\"w-full\">\n                <thead className=\"bg-primary text-white text-center\">\n                    <tr>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">#</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">{t('title_kk')}</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">{t('title_ru')}</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {roles.map((rl, index) => <tr key={rl.id} className={role?.id === rl.id ? \"bg-selected hover:cursor-pointer\" : \"hover:cursor-pointer\"} onClick={() => navigate(`/dashboard/users?state=roles&roleId=${rl.id}`)}>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">{index + 1}</td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 hover:cursor-pointer hover:underline\">\n                                <input className=\"text-sm w-full focus:outline-none p-1 text-black\" form={`updateRoleForm_${rl.id}`} type=\"text\" name=\"title_kk\" defaultValue={rl.title_kk} maxLength={45} onChange={() => {\n              const button = document.getElementById(`updateRoleButton_${rl.id}`);\n              button.click();\n            }} />\n                            </td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 hover:cursor-pointer hover:underline\">\n                                <input className=\"text-sm w-full focus:outline-none p-1 text-black\" form={`updateRoleForm_${rl.id}`} type=\"text\" name=\"title_ru\" defaultValue={rl.title_ru} maxLength={45} onChange={() => {\n              const button = document.getElementById(`updateRoleButton_${rl.id}`);\n              button.click();\n            }} />\n                            </td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">\n                                <ButtonDeleteRole roleId={rl.id} />\n                            </td>\n                        </tr>)}\n                </tbody>\n            </table>\n        </>;\n}\n_s(RolesTable, \"S/mlWsZTmnR3pBaV4+wWlnjauYg=\", false, function () {\n  return [useNavigate, useTranslation];\n});\n_c = RolesTable;\nvar _c;\n$RefreshReg$(_c, \"RolesTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/tbl_ainputforms.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/tbl_ainputforms.tsx\");\n  import.meta.hot.lastModified = \"1710246544750.794\";\n}\n// REMIX HMR END\n\nimport { AccessType } from \"@prisma/client\";\nimport { Form } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport ButtonDeleteAccessInputForm from \"./btn_delete_ainputform\";\nimport CustomButton from \"../../elements/custom_button\";\nexport default function AccessInputFormsTable({\n  aforms,\n  inputForms\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  return <>\n            {aforms && aforms.map(aform => <Form className=\"hidden\" id={`updateAccessInputForm_${aform.id}`} key={`updateAccessInputForm_${aform.id}`} method=\"post\">\n                    <input type=\"hidden\" name=\"id\" defaultValue={aform.id} />\n                    <input type=\"hidden\" name=\"roleId\" defaultValue={aform.roleId} />\n                    <CustomButton className=\"bg-green-500 hover:shadow-green-100\" id={`updateAccessInputFormButton_${aform.id}`} form={`updateAccessInputForm_${aform.id}`} type=\"submit\" name=\"_action\" value=\"updateAccessInput\" />\n                </Form>)}\n            <table className=\"w-full\">\n                <thead className=\"bg-primary text-white text-center\">\n                    <tr>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">#</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">{t('form')}</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">{t('access_type')}</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {aforms.map((aform, index) => <tr key={aform.id}>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">{index + 1}</td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500\">\n                                <select className=\"text-sm w-full\" form={`updateAccessInputForm_${aform.id}`} name=\"formId\" defaultValue={aform.formId ? aform.formId : ''} onChange={() => {\n              const button = document.getElementById(`updateAccessInputFormButton_${aform.id}`);\n              button.click();\n            }}>\n                                    {inputForms.map(inputForm => <option key={inputForm.id} value={inputForm.id}>\n                                            {inputForm[`title_${i18n.language}`]}\n                                        </option>)}\n                                </select>\n                            </td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-24\">\n                                <select className=\"text-sm w-full\" form={`updateAccessInputForm_${aform.id}`} name=\"accessType\" defaultValue={aform.accessType ? aform.accessType : ''} onChange={() => {\n              const button = document.getElementById(`updateAccessInputFormButton_${aform.id}`);\n              button.click();\n            }}>\n                                    {Object.keys(AccessType).map(key => <option key={key} value={key}>{key}</option>)}\n                                </select>\n                            </td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">\n                                <ButtonDeleteAccessInputForm aform={aform} />\n                            </td>\n                        </tr>)}\n                </tbody>\n            </table>\n        </>;\n}\n_s(AccessInputFormsTable, \"tesxYUfym1EdybWre/Q68xlYjtY=\", false, function () {\n  return [useTranslation];\n});\n_c = AccessInputFormsTable;\nvar _c;\n$RefreshReg$(_c, \"AccessInputFormsTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_delete_ainputform.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_delete_ainputform.tsx\");\n  import.meta.hot.lastModified = \"1710238593029.015\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonDeleteAccessInputForm({\n  aform\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleDelete = async event => {\n    const response = confirm(t('confirm_delete'));\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"id\" defaultValue={aform.id} />\n            <input type=\"hidden\" name=\"roleId\" defaultValue={aform.roleId} />\n            <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteAccessInput\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                </svg>\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonDeleteAccessInputForm, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonDeleteAccessInputForm;\nvar _c;\n$RefreshReg$(_c, \"ButtonDeleteAccessInputForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_add_ainputform.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_add_ainputform.tsx\");\n  import.meta.hot.lastModified = \"1710226579995.721\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonAddAccessInputForm({\n  roleId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"roleId\" value={roleId} />\n            <CustomButton className=\"bg-primary hover:shadow-blue-gray-100\" type=\"submit\" name=\"_action\" value=\"createEmptyAccessInput\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n                {t('add')}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonAddAccessInputForm, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonAddAccessInputForm;\nvar _c;\n$RefreshReg$(_c, \"ButtonAddAccessInputForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_add_role.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_add_role.tsx\");\n  import.meta.hot.lastModified = \"1710226856464.462\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonAddRole({\n  count\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"cnt\" defaultValue={count + 1} />\n            <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" type=\"submit\" name=\"_action\" value=\"createEmptyRole\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n                {t('add')}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonAddRole, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonAddRole;\nvar _c;\n$RefreshReg$(_c, \"ButtonAddRole\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_add_asearchform.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_add_asearchform.tsx\");\n  import.meta.hot.lastModified = \"1710228484440.997\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonAddAccessSearchForm({\n  roleId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"roleId\" value={roleId} />\n            <CustomButton className=\"bg-primary hover:shadow-blue-gray-100\" type=\"submit\" name=\"_action\" value=\"createEmptyAccessSearch\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n                {t('add')}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonAddAccessSearchForm, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonAddAccessSearchForm;\nvar _c;\n$RefreshReg$(_c, \"ButtonAddAccessSearchForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/tbl_asearchforms.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/tbl_asearchforms.tsx\");\n  import.meta.hot.lastModified = \"1710246584903.56\";\n}\n// REMIX HMR END\n\nimport { AccessType } from \"@prisma/client\";\nimport { Form } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nimport ButtonDeleteAccessSearchForm from \"./btn_delete_asearchform\";\nimport CustomButton from \"../../elements/custom_button\";\nexport default function AccessSearchFormsTable({\n  aforms,\n  searchForms\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  return <>\n            {aforms && aforms.map(aform => <Form className=\"hidden\" id={`updateAccessSearchForm_${aform.id}`} key={`updateAccessSearchForm_${aform.id}`} method=\"post\">\n                    <input type=\"hidden\" name=\"id\" defaultValue={aform.id} />\n                    <input type=\"hidden\" name=\"roleId\" defaultValue={aform.roleId} />\n                    <input type=\"hidden\" name=\"accessType\" defaultValue={AccessType.READ} />\n                    <CustomButton className=\"bg-green-500 hover:shadow-green-100\" id={`updateAccessSearchFormButton_${aform.id}`} form={`updateAccessSearchForm_${aform.id}`} type=\"submit\" name=\"_action\" value=\"updateAccessSearch\" />\n                </Form>)}\n            <table className=\"w-full\">\n                <thead className=\"bg-primary text-white text-center\">\n                    <tr>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">#</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">{t('form')}</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {aforms.map((aform, index) => <tr key={aform.id}>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">{index + 1}</td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500\">\n                                <select className=\"text-sm w-full\" form={`updateAccessSearchForm_${aform.id}`} name=\"formId\" defaultValue={aform.formId ? aform.formId : ''} onChange={() => {\n              const button = document.getElementById(`updateAccessSearchFormButton_${aform.id}`);\n              button.click();\n            }}>\n                                    {searchForms.map(searchForm => <option key={searchForm.id} value={searchForm.id}>\n                                            {searchForm[`title_${i18n.language}`]}\n                                        </option>)}\n                                </select>\n                            </td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">\n                                <ButtonDeleteAccessSearchForm aform={aform} />\n                            </td>\n                        </tr>)}\n                </tbody>\n            </table>\n        </>;\n}\n_s(AccessSearchFormsTable, \"tesxYUfym1EdybWre/Q68xlYjtY=\", false, function () {\n  return [useTranslation];\n});\n_c = AccessSearchFormsTable;\nvar _c;\n$RefreshReg$(_c, \"AccessSearchFormsTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_delete_asearchform.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_delete_asearchform.tsx\");\n  import.meta.hot.lastModified = \"1710238594453.033\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonDeleteAccessSearchForm({\n  aform\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleDelete = async event => {\n    const response = confirm(t('confirm_delete'));\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"id\" defaultValue={aform.id} />\n            <input type=\"hidden\" name=\"roleId\" defaultValue={aform.roleId} />\n            <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteAccessSearch\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                </svg>\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonDeleteAccessSearchForm, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonDeleteAccessSearchForm;\nvar _c;\n$RefreshReg$(_c, \"ButtonDeleteAccessSearchForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/tbl_users_only_login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/tbl_users_only_login.tsx\");\n  import.meta.hot.lastModified = \"1710238263032.832\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport { useTranslation } from \"react-i18next\";\nexport default function UsersOnlyLoginTable({\n  users,\n  currentUserId\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation();\n  return <table className=\"w-full\">\n            <thead className=\"bg-primary text-white text-center\">\n                <tr>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">#</th>\n                    <th className=\"p-1 text-sm border border-blue-gray-500\">{t('login')}</th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.map((user, index) => <tr key={user.id} className={user?.id === currentUserId ? \"bg-selected hover:cursor-pointer\" : \" hover:cursor-pointer\"} onClick={() => navigate(`/dashboard/users?state=users_roles&current_user=${user.id}`)}>\n                        <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">{index + 1}</td>\n                        <td className=\"p-1 text-sm border border-blue-gray-500\">\n                            {user.login}\n                        </td>\n                    </tr>)}\n            </tbody>\n        </table>;\n}\n_s(UsersOnlyLoginTable, \"GK/KaWFRYoH2IJJH58+SEoGCCyc=\", false, function () {\n  return [useNavigate, useTranslation];\n});\n_c = UsersOnlyLoginTable;\nvar _c;\n$RefreshReg$(_c, \"UsersOnlyLoginTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_delete_userrole.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_delete_userrole.tsx\");\n  import.meta.hot.lastModified = \"1710238603865.158\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonDeleteUserRole({\n  userRoleId,\n  userId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleDelete = async event => {\n    const response = confirm(t('confirm_delete'));\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"id\" defaultValue={userRoleId} />\n            <input type=\"hidden\" name=\"userId\" defaultValue={userId ? userId : ''} />\n            <CustomButton className=\"bg-danger hover:shadow-danger_shadow\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteUserRole\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n                </svg>\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonDeleteUserRole, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonDeleteUserRole;\nvar _c;\n$RefreshReg$(_c, \"ButtonDeleteUserRole\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/tbl_roles_only_title.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/tbl_roles_only_title.tsx\");\n  import.meta.hot.lastModified = \"1710246644748.71\";\n}\n// REMIX HMR END\n\nimport { useTranslation } from \"react-i18next\";\nimport ButtonDeleteUserRole from \"./btn_delete_userrole\";\nimport { Form } from \"@remix-run/react\";\nexport default function RolesOnlyTitleTable({\n  userRoles,\n  roles\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  return <>\n            {userRoles && userRoles.map(ur => <Form className=\"hidden\" id={`updateUserRole_${ur.id}`} key={`updateUserRole_${ur.id}`} method=\"post\">\n                    <input type=\"hidden\" name=\"id\" defaultValue={ur.id} />\n                    <input type=\"hidden\" name=\"userId\" defaultValue={ur.userId ? ur.userId : ''} />\n                    <input type=\"submit\" id={`updateUserRoleButton_${ur.id}`} form={`updateUserRole_${ur.id}`} name=\"_action\" value=\"updateUserRole\" />\n                </Form>)}\n            <table className=\"w-full\">\n                <thead className=\"bg-primary text-white text-center\">\n                    <tr>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">#</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\">{t('title')}</th>\n                        <th className=\"p-1 text-sm border border-blue-gray-500\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {userRoles.map((ur, index) => <tr key={ur.id}>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">{index + 1}</td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500\">\n                                <select className=\"text-sm w-full\" form={`updateUserRole_${ur.id}`} name=\"roleId\" defaultValue={ur.roleId ? ur.roleId : ''} onChange={() => {\n              const button = document.getElementById(`updateUserRoleButton_${ur.id}`);\n              button.click();\n            }}>\n                                    {roles.map(role => <option key={role.id} value={role.id}>\n                                            {role[`title_${i18n.language}`]}\n                                        </option>)}\n                                </select>\n                            </td>\n                            <td className=\"p-1 text-sm border border-blue-gray-500 w-10\">\n                                <ButtonDeleteUserRole userRoleId={ur.id} userId={ur.userId} />\n                            </td>\n                        </tr>)}\n                </tbody>\n            </table>\n        </>;\n}\n_s(RolesOnlyTitleTable, \"tesxYUfym1EdybWre/Q68xlYjtY=\", false, function () {\n  return [useTranslation];\n});\n_c = RolesOnlyTitleTable;\nvar _c;\n$RefreshReg$(_c, \"RolesOnlyTitleTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/users/btn_add_userrole.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/users/btn_add_userrole.tsx\");\n  import.meta.hot.lastModified = \"1710233282688.666\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonAddUserRole({\n  userId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"userId\" defaultValue={userId} />\n            <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" type=\"submit\" name=\"_action\" value=\"createEmptyUserRole\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                </svg>\n                {t('add')}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonAddUserRole, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonAddUserRole;\nvar _c;\n$RefreshReg$(_c, \"ButtonAddUserRole\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "MaterialTailwind", "moment", "import_jsx_dev_runtime", "_s", "_c", "import_moment", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "moment", "_c", "import_react", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "role", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_client", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "MaterialTailwind", "_c", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
